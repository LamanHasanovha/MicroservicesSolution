services:
  consul:
    image: hashicorp/consul:latest
    container_name: consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    networks:
      - microservices-network

  # for Monitoring and Observability
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    networks:
      - microservices-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - microservices-network

  # product-service instances
  product-service-1:
    build:
      context: ./ProductService
      dockerfile: Dockerfile
    container_name: product-service-1
    ports:
      - "50011:50001"
    environment:
      - ASPNETCORE_URLS=http://+:50001
      - CONSUL_HOST=consul
      - SERVICE_INSTANCE=Instance1
    depends_on:
      - consul
    networks:
      - microservices-network

  product-service-2:
    build:
      context: ./ProductService
      dockerfile: Dockerfile
    container_name: product-service-2
    ports:
      - "50012:50001"
    environment:
      - ASPNETCORE_URLS=http://+:50001
      - CONSUL_HOST=consul
      - SERVICE_INSTANCE=Instance2
    depends_on:
      - consul
    networks:
      - microservices-network

  product-service-3:
    build:
      context: ./ProductService
      dockerfile: Dockerfile
    container_name: product-service-3
    ports:
      - "50013:50001"
    environment:
      - ASPNETCORE_URLS=http://+:50001
      - CONSUL_HOST=consul
      - SERVICE_INSTANCE=Instance3
    depends_on:
      - consul
    networks:
      - microservices-network

  # order-service instances
  order-service-1:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    container_name: order-service-1
    ports:
      - "50021:50002"
    environment:
      - ASPNETCORE_URLS=http://+:50002
      - CONSUL_HOST=consul
      - SERVICE_INSTANCE=Instance1
    depends_on:
      - consul
    networks:
      - microservices-network

  order-service-2:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    container_name: order-service-2
    ports:
      - "50022:50002"
    environment:
      - ASPNETCORE_URLS=http://+:50002
      - CONSUL_HOST=consul
      - SERVICE_INSTANCE=Instance2
    depends_on:
      - consul
    networks:
      - microservices-network

  api-gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "50000:50000"
    environment:
      - ASPNETCORE_URLS=http://+:50000
      - CONSUL_HOST=consul
    depends_on:
      - consul
      - product-service-1
      - product-service-2
      - product-service-3
      - order-service-1
      - order-service-2
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge
